[{"C:\\Users\\alber\\WebstormProjects\\resume\\src\\index.js":"1","C:\\Users\\alber\\WebstormProjects\\resume\\src\\App.js":"2","C:\\Users\\alber\\WebstormProjects\\resume\\src\\reportWebVitals.js":"3","C:\\Users\\alber\\WebstormProjects\\resume\\src\\components\\Resume.jsx":"4","C:\\Users\\alber\\WebstormProjects\\resume\\src\\components\\Main.jsx":"5","C:\\Users\\alber\\WebstormProjects\\resume\\src\\API\\resumeAPI.js":"6","C:\\Users\\alber\\WebstormProjects\\resume\\src\\store\\reducers\\resumeReducer.js":"7","C:\\Users\\alber\\WebstormProjects\\resume\\src\\store\\actions\\resume.js":"8","C:\\Users\\alber\\WebstormProjects\\resume\\src\\store\\reducers\\index.js":"9","C:\\Users\\alber\\WebstormProjects\\resume\\src\\components\\Error.jsx":"10"},{"size":535,"mtime":1639601629149,"results":"11","hashOfConfig":"12"},{"size":452,"mtime":1639604151513,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":3337,"mtime":1639603225808,"results":"15","hashOfConfig":"12"},{"size":3200,"mtime":1639603332797,"results":"16","hashOfConfig":"12"},{"size":1520,"mtime":1639597880452,"results":"17","hashOfConfig":"12"},{"size":419,"mtime":1639601121337,"results":"18","hashOfConfig":"12"},{"size":252,"mtime":1639603225812,"results":"19","hashOfConfig":"12"},{"size":431,"mtime":1639595542772,"results":"20","hashOfConfig":"12"},{"size":147,"mtime":1639604098079,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1jassj2",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\alber\\WebstormProjects\\resume\\src\\index.js",[],["45","46"],"C:\\Users\\alber\\WebstormProjects\\resume\\src\\App.js",[],"C:\\Users\\alber\\WebstormProjects\\resume\\src\\reportWebVitals.js",[],"C:\\Users\\alber\\WebstormProjects\\resume\\src\\components\\Resume.jsx",["47"],"import React, { useState } from 'react';\nimport { deleteResume, putResume } from '../API/resumeAPI';\nimport { useDispatch } from 'react-redux';\nimport { updateResumes } from '../store/actions/resume';\n\n\nconst Resume = ({\n                  id, firstname, lastname, age, gender, email, profile, address, phone, favoriteFilm, salary, about\n                }) => {\n  const [isEdit, setIsEdit] = useState(false);\n  const [_id, setId] = useState(id);\n  const [_firstname, setFirstname] = useState(firstname);\n  const [_lastname, setLastname] = useState(lastname);\n  const [_age, setAge] = useState(age);\n  const [_gender, setGender] = useState(gender);\n  const [_email, setEmail] = useState(email);\n  const [_profile, setProfile] = useState(profile);\n  const [_country, setCountry] = useState(address.country);\n  const [_city, setCity] = useState(address.city);\n  const [_phone, setPhone] = useState(phone);\n  const [_favoriteFilm, setFavoriteFilm] = useState(favoriteFilm);\n  const [_salary, setSalary] = useState(salary);\n  const [_about, setAbout] = useState(about);\n\n\n\n\n  const dispatch = useDispatch()\n  const editResume = async () => {\n    await putResume(\n      _id, _firstname, _lastname, _age, _gender, _profile, _email,\n      _country, _city, _phone, _favoriteFilm, _salary, _about,\n    )\n    dispatch(updateResumes())\n    setIsEdit(!isEdit)\n  }\n  const removeResume = async () => {\n    await deleteResume(id)\n    dispatch(updateResumes())\n  }\n\n  return(\n    (isEdit ?\n        <div className=\"resume\">\n          <input value={_firstname} onChange={setFirstname} placeholder=\"Firstname\" />\n          <input value={_lastname} onChange={setLastname} placeholder=\"Lastname\" />\n          <input value={_age} onChange={setAge} placeholder=\"Age\" />\n          <input value={_gender} onChange={setGender} placeholder=\"Gender\" />\n          <input value={_email} onChange={setEmail} placeholder=\"Email\" />\n          <input value={_profile} onChange={setProfile} placeholder=\"Profile\" />\n          <input value={_country} onChange={setCountry} placeholder=\"Country\" />\n          <input value={_city} onChange={setCity} placeholder=\"City\" />\n          <input value={_phone} onChange={setPhone} placeholder=\"Phone\" />\n          <input value={_favoriteFilm} onChange={setFavoriteFilm} placeholder=\"Favorite Film\" />\n          <input value={_salary} onChange={setSalary} placeholder=\"Salary\" />\n          <input value={_about} onChange={setAbout} placeholder=\"Abount\" />\n        <button onClick={() => editResume()}>Сохранить</button>\n      </div> :\n        <div className=\"resume\">\n          <p>{'Имя: ' +  firstname}</p>\n          <p>{'Фамилия: ' +  lastname }</p>\n          <p>{'Возраст: ' +  age}</p>\n          <p>{'Пол: ' +  gender}</p>\n          <p>{'Почта ' +  email}</p>\n          <p>{'Направление: ' +  profile}</p>\n          <p>{'Адрес: ' +  address.country + \", \" + address.city}</p>\n          <p>{'Телефон: ' +  phone}</p>\n          <p>{'Любимый фильм: ' +  favoriteFilm}</p>\n          <p>{'З/п: ' +  salary}</p>\n          <p>{'О себе: ' +  about}</p>\n          <button onClick={() => setIsEdit(!isEdit)}>Редактировать</button>\n          <button onClick={() => removeResume()}>Удалить</button>\n        </div>)\n\n  )\n}\n\nexport default Resume;\n","C:\\Users\\alber\\WebstormProjects\\resume\\src\\components\\Main.jsx",["48","49","50","51"],"import React, { useEffect, useState } from 'react';\nimport Resume from './Resume';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updatePosts, updateResumes } from '../store/actions/resume';\nconst Main = () => {\n  const dispatch = useDispatch();\n  const resumes = useSelector((state) => state.resume.allResumes)\n  useEffect(async () => {\n    await dispatch(updateResumes());\n  })\n  const test = {\n    id:1,\n    firstname: 'David',\n    lastname: 'Lynch',\n    age: 75,\n    gender: 'MALE',\n    email: 'twinpeaks@lora.com',\n    profile: 'Genius',\n    address: {\n      country: 'Nobody',\n      city: 'Knows'\n    },\n    phone: '89825',\n    favoriteFilm: 'Iron Man 2',\n    salary: 99,\n    about: 'Love weather reports'\n  }\n  return(\n    <div className=\"label\">\n      {/*{resumes.map((test) => <Resume*/}\n      {/*  id={test.id}*/}\n      {/*  firstname={test.firstname}*/}\n      {/*  lastname={test.lastname}*/}\n      {/*  age={test.age}*/}\n      {/*  gernder={test.gender}*/}\n      {/*  email={test.email}*/}\n      {/*  profile={test.profile}*/}\n      {/*  address={test.address}*/}\n      {/*  phone={test.phone}*/}\n      {/*  favoriteFilm={test.favoriteFilm}*/}\n      {/*  salary={test.salary}*/}\n      {/*  about={test.about}*/}\n      {/*  />*/}\n      {/*  )}*/}\n      <Resume\n        id={test.id}\n        firstname={test.firstname}\n        lastname={test.lastname}\n        age={test.age}\n        gender={test.gender}\n        email={test.email}\n        profile={test.profile}\n        address={test.address}\n        phone={test.phone}\n        favoriteFilm={test.favoriteFilm}\n        salary={test.salary}\n        about={test.about}\n      />\n      <Resume\n        id={test.id}\n        firstname={test.firstname}\n        lastname={test.lastname}\n        age={test.age}\n        gender={test.gender}\n        email={test.email}\n        profile={test.profile}\n        address={test.address}\n        phone={test.phone}\n        favoriteFilm={test.favoriteFilm}\n        salary={test.salary}\n        about={test.about}\n      />\n      <Resume\n        id={test.id}\n        firstname={test.firstname}\n        lastname={test.lastname}\n        age={test.age}\n        gender={test.gender}\n        email={test.email}\n        profile={test.profile}\n        address={test.address}\n        phone={test.phone}\n        favoriteFilm={test.favoriteFilm}\n        salary={test.salary}\n        about={test.about}\n      />\n      <Resume\n        id={test.id}\n        firstname={test.firstname}\n        lastname={test.lastname}\n        age={test.age}\n        gender={test.gender}\n        email={test.email}\n        profile={test.profile}\n        address={test.address}\n        phone={test.phone}\n        favoriteFilm={test.favoriteFilm}\n        salary={test.salary}\n        about={test.about}\n      />\n      <Resume\n        id={test.id}\n        firstname={test.firstname}\n        lastname={test.lastname}\n        age={test.age}\n        gender={test.gender}\n        email={test.email}\n        profile={test.profile}\n        address={test.address}\n        phone={test.phone}\n        favoriteFilm={test.favoriteFilm}\n        salary={test.salary}\n        about={test.about}\n      />\n    </div>\n  )\n}\n\nexport default Main;\n","C:\\Users\\alber\\WebstormProjects\\resume\\src\\API\\resumeAPI.js",[],"C:\\Users\\alber\\WebstormProjects\\resume\\src\\store\\reducers\\resumeReducer.js",[],"C:\\Users\\alber\\WebstormProjects\\resume\\src\\store\\actions\\resume.js",[],"C:\\Users\\alber\\WebstormProjects\\resume\\src\\store\\reducers\\index.js",[],"C:\\Users\\alber\\WebstormProjects\\resume\\src\\components\\Error.jsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":11,"column":15,"nodeType":"58","messageId":"59","endLine":11,"endColumn":20},{"ruleId":"56","severity":1,"message":"60","line":1,"column":28,"nodeType":"58","messageId":"59","endLine":1,"endColumn":36},{"ruleId":"56","severity":1,"message":"61","line":4,"column":10,"nodeType":"58","messageId":"59","endLine":4,"endColumn":21},{"ruleId":"56","severity":1,"message":"62","line":7,"column":9,"nodeType":"58","messageId":"59","endLine":7,"endColumn":16},{"ruleId":"63","severity":1,"message":"64","line":8,"column":13,"nodeType":"65","endLine":10,"endColumn":4},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'setId' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'updatePosts' is defined but never used.","'resumes' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]